setwd("C:/RPrj")
library(N2H4)
cate<-getMainCategory()        
tcate<-cate$sid1[6]                 
subCate<-cbind(sid1=tcate,getSubCategory(sid1=tcate))    
tscate<-subCate$sid2[7]    
strDate<-"20190514"   
library(KoNLP)
useSejongDic()
library(wordcloud)


newsData<-c()
    for (sid1 in tcate){
        for (sid2 in tscate){
        pageUrl<-paste0("http://news.naver.com/main/list.nhn?sid2=",sid2,"&sid1=",sid1,"&mid=shm&mode=LS2D&date=",strDate)
          max<-getMaxPageNum(pageUrl)
      
          for (pageNum in 1:max){
            pageUrl<-paste0("http://news.naver.com/main/list.nhn?sid2=",sid2,"&sid1=",sid1,"&mid=shm&mode=LS2D&date=",strDate,"&page=",pageNum)
            newsList<-getUrlListByCategory(pageUrl)
        
            for (newslink in newsList$links){
               tryi<-0
              tem<-try(getContent(newslink), silent = TRUE)
              while(tryi<=5&&class(tem)=="try-error"){
                tem<-try(getContent(newslink), silent = TRUE)
                tryi<-tryi+1
              }
              if(class(tem$datetime)[1]=="POSIXct"){
                   newsData<-rbind(newsData, tem)
                 }
            }
            dir.create("./data",showWarnings=F)
            write.csv(newsData, file=paste0("./data/news",tcate,"_",tscate,"_",strDate,".csv"),row.names = F)
        }
    }
}


library(stringr)
useSejongDic()

cleaning_text<-function(dat){
    char<-gsub("[[:cntrl:]]","",dat)
    char<-gsub("@[[:graph:]]*","",char)
    char<-gsub("[A-z]","",char)
    char<-gsub("\\¢º","",char)
    char<-gsub("¹«´ÜÀüÀç ¹× Àç¹èÆ÷ ±ÝÁö","",char)
    char<-gsub("±ÝÁö","",char)
    char<-gsub("Àç¹èÆ÷","",char)
    char<-gsub("³â","",char)
    char<-gsub("¹«´Ü","",char)
    char<-gsub("ÀüÀç","",char)
    char<-gsub("¹Ù·Î°¡±â","",char)
    char<-gsub("±âÀÚ","",char)
    char<-gsub("±¸µ¶","",char)
    char<-gsub("Ã¤³Î ±¸µ¶ÇÏ±â","",char)
    char<-gsub("¿¬ÇÕ","",char)
    char<-gsub("³×ÀÌ¹ö","",char)
    char<-gsub("´º½º","",char)
    char<-gsub("[^\uAC00-\uD7A3xfe a-zA-Z¤¡-¤¾¤¿-¤Ó°¡-ÆR\\s]","",char,perl=FALSE)
    char<-gsub("¨Ï","",char)
}


news_body<-cleaning_text(newsData$body)

for (i in 1:length(newsData$press)){
    news_body<-gsub(newsData$press[i],"",news_body)
}

news_body<-unlist(news_body)
news_body<-Filter(function(x){nchar(x)>=2},news_body)

news_body_wc<-unlist(news_body)
news_body_wc<-Filter(function(x){nchar(x)>=2},news_body_wc)

# ¿öµåÅ¬¶ó¿ìµå
news_body_wc<-news_body%>%sapply(extractNoun,USE.NAMES=FALSE)
write(unlist(news_body_wc),"word.txt")
news_body_wc<-read.table("word.txt")
wordcount<-table(news_body_wc)

png("./data/wc_image.png",width=800,height=600)

pal<-brewer.pal(8,"Dark2")
wordcloud(words=names(wordcount), freq=wordcount, min.freq=2, max.words = 300,random.order=F, rot.per=0.10,scale=c(4,.5), colors=pal)

dev.off()


# ¿¬°üºÐ¼®

library(tm)
cps<-Corpus(VectorSource(news_body))

ko.words <- function(doc){
  d <- as.characters(doc)
  extractNoun(d)
}
tdm<-TermDocumentMatrix(cps,
   control=list( tokenize=ko.words,
      removePunctuation=T,
      stopwords=T,
      removeNumbers=T,
      wordLengths=c(4,Inf),
      weighting=weightTfIdf))

tdm.matrix <- as.matrix(tdm)
word.count <- rowSums(tdm.matrix)
word.order <- order(word.count, decreasing=T)
rownames(tdm.matrix)[word.order[1:30]]
freq.words <- tdm.matrix[word.order[1:30], ]
co.matrix <- freq.words %*% t(freq.words)

library("tidyr")
library("dplyr")

co.dataframe<-as.data.frame(co.matrix)
co.dataframe$child = names(co.dataframe)
co.dataframe<-co.dataframe%>%gather(parent,degree,1:(ncol(co.dataframe)-1))
co.dataframe<-left_join(co.dataframe,co.dataframe%>%group_by(child)%>%summarise(sum=sum(degree)),by="child")
co.dataframe<-co.dataframe[-which(co.dataframe$degree==0),]
co.dataframe$sum <- co.dataframe$sum*30
co.dataframe<-co.dataframe[-which(co.dataframe$child==co.dataframe$parent),]

row.names(co.dataframe) = NULL
duple=vector()
for(i in 1:nrow(co.dataframe)){
for(j in 1:nrow(co.dataframe)){
if(i!=j){
if(co.dataframe$child[i]==co.dataframe$parent[j]&co.dataframe$parent[i]==co.dataframe$child[j]){
duple = append(duple,j)
}}}}

library("ggraph")
library("igraph")


png("./data/a_image.png",width=800,height = 600)

p<-co.dataframe%>%
graph_from_data_frame() %>% 
ggraph(layout="fr") +
geom_edge_link(color = "lightpink4" ,aes(edge_alpha = sum,edge_width=sum )) +
geom_node_point(color="lightgoldenrod", size=30) +
geom_node_text(aes(label=name),vjust=0) +
theme_void()

plot(p)
dev.off()